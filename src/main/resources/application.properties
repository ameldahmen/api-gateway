# Application name
#spring.application.name=api-gateway
#
## Server Port
#server.port=8086
#
## Enable Eureka Discovery Locator for dynamic routing
#spring.cloud.gateway.discovery.locator.enabled=true
#
## Gateway Routes
#spring.cloud.gateway.routes[0].id=auth-service
#spring.cloud.gateway.routes[0].uri=lb://auth-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
#
#spring.cloud.gateway.routes[1].id=product-service
#spring.cloud.gateway.routes[1].uri=lb://product-service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
##
##spring.cloud.gateway.routes[2].id=user-service
##spring.cloud.gateway.routes[2].uri=lb://user-service
##spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**
#
#
## Disable CSRF for WebFlux-based gateway
##spring.main.web-application-type=reactive
##spring.security.oauth2.resourceserver.jwt.issuer-uri=
#
#
## Eureka server configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#
## Logging for debugging
#logging.level.org.springframework.cloud.gateway=DEBUG
#logging.level.reactor.netty=DEBUG
#logging.level.org.springframework.http=DEBUG
#
## Allow bean definition overriding (useful if multiple configs are loaded)
#spring.main.allow-bean-definition-overriding=true
#
#
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web.cors=DEBUG
#spring.web.cors.allowed-origins=http://localhost:3000
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
#spring.web.cors.allowed-headers=*
#spring.web.cors.allow-credentials=true
#
## Expose all Actuator endpoints
#management.endpoints.web.exposure.include=*
#
## Alternatively, expose only specific endpoints
## management.endpoints.web.exposure.include=info,health
#info.app.name=API Gateway
#info.app.description=Gateway for routing requests to microservices
#info.app.version=1.0.0
# Application name
#spring.application.name=api-gateway
#
## Server port
#server.port=8086
#
## Enable Eureka Discovery for dynamic routing
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#
## Gateway Routes
#spring.cloud.gateway.routes[0].id=auth-service
#spring.cloud.gateway.routes[0].uri=lb://auth-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
#
#spring.cloud.gateway.routes[1].id=product-service
#spring.cloud.gateway.routes[1].uri=lb://product-service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
#
#spring.cloud.gateway.routes[2].id=user-service
#spring.cloud.gateway.routes[2].uri=lb://user-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**
#
## Enable CORS
#spring.web.cors.allowed-origins=http://localhost:3000
#spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
#spring.web.cors.allowed-headers=*
#spring.web.cors.allow-credentials=true
#
## Eureka server configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#
## Expose actuator endpoints for debugging
#management.endpoints.web.exposure.include=*
# Application details
spring.application.name=api-gateway
server.port=8086

# Enable dynamic routing for Eureka services
spring.cloud.gateway.discovery.locator.enabled=true

# Eureka server details
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Expose Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JWT Secret for security (optional)
jwt.secret=wX2aU7xmrLCxI9tNKzksBZdjF67Uzr1LTxF/7Um8YlE=

# Global CORS Configuration
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=Authorization,Content-Type
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

# Eureka Configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.enabled=true
#eureka.client.healthcheck.enabled=true
#eureka.client.should-unregister-on-shutdown=false
#
## Logging Configuration
#logging.level.com.netflix.discovery=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#logging.level.org.springframework.cloud.gateway=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.reactor.netty=DEBUG
#logging.level.org.springframework.http=DEBUG
#
## Server Port
#server.port=8086
#
## Management Endpoint Configuration
#management.endpoints.web.exposure.include=*
#management.health.eureka.enabled=true


#spring:
#  application:
#    name: api-gateway
#
#  cloud:
#    gateway:
#      routes:
#        - id: auth-service
#          uri: lb://auth-service
#          predicates:
#            - Path=/api/auth/**
#        - id: product-service
#          uri: lb://product-service
#          predicates:
#            - Path=/api/products/**
#        - id: user-service
#          uri: lb://user-service
#          predicates:
#            - Path=/api/users/**
#
#      globalcors:
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: "http://localhost:3000" # React Frontend
#            allowedMethods:
#              - GET
#              - POST
#              - PUT
#              - DELETE
#            allowedHeaders:
#              - Authorization
#              - Content-Type
#            allowCredentials: true
#
## Eureka server configuration
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true
#    enabled: true
#    healthcheck:
#      enabled: true
#    shouldUnregisterOnShutdown: false
#
#
## Logging for debugging
#logging:
#  level:
#    com.netflix.discovery: debug
#    org.springframework.cloud.netflix.eureka: debug
#
#    org:
#      springframework:
#        cloud.gateway: DEBUG
#        web: DEBUG
#    reactor:
#      netty: DEBUG
#    org.springframework.http: DEBUG
#
#
#
#
#server:
#  port: 8086
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  health:
#    eureka:
#      enabled: true
logging.level.root=DEBUG